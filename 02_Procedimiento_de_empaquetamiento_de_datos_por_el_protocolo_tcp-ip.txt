
----- 02_Procedimiento_de_empaquetamiento_de_datos_por_el_protocolo_tcp-ip -----

Por ejemplo yo voy a enviar el string "rasta como pollo y bal" 

0: 108 → l
1: 97 → a
2: 32 →
3: 114 → r
4: 97 → a
5: 116 → t
6: 97 → a
7: 32 →
8: 97 → a
9: 122 → z
10: 117 → u
11: 108 → l
12: 32 →
13: 115 → s
14: 101 → e
15: 32 →
16: 97 → a
17: 118 → v
18: 97 → a
19: 32 →
20: 97 → a
21: 32 →
22: 99 → c

y esto queda 
[108, 97, 32, 114, 97, 116, 97, 32, 97, 122, 117, 108, 
 32, 115, 101, 32, 97, 118, 97, 32, 97, 32, 99, 117, 
 108, 105, 97, 114, 32]

Esto se divide en segmentos: 
2. División en segmentos (MSS = 8)

TCP corta en bloques de hasta 8 bytes de datos:

Segmento 1 (Seq=0, 8 bytes)
[108, 97, 32, 114, 97, 116, 97, 32] → "la rata "
Source Port: 49152
Dest Port: 80

Segmento 2 (Seq=8, 8 bytes)
[97, 122, 117, 108, 32, 115, 101, 32] → "azul se "
Source Port: 49152
Dest Port: 80

Segmento 3 (Seq=16, 8 bytes)
[97, 118, 97, 32, 97, 32, 99, 117] → "ava a cu"
Source Port: 49152
Dest Port: 80

Segmento 4 (Seq=24, 5 bytes)
[108, 105, 97, 114, 32] → "liar "
Source Port: 49152
Dest Port: 80

Y aquí está lo interesante y lo logico de este cuento, existe un maximo de bytes para enviar 
que llaman MTU (Maximum transmission Unit) es decir los maximos bytes que se pueden enviar en 
cada conexión. 

Esta el MSS (Maximum Segment size) este es el maximo numero de bytes que se pueden enviar en cada 
segmento. 

Tambien está la ventana TCP (TCP windown o TCP Receive Window)  que es un mecanimos de control de flujo que tiene el protocolo TCP para poder asegurarse de que el emisor envie los datos que el receptor tiene capacidad de recibir o procesar en ese momento. 

ACK ya habiamos dicho que son los mensajes de confirmacion del receptor de los datos de entrega. 

Con todos estos datos y los headers el puerto de origen y el puerto de destino en el cual 
se va enviar la solicitud.

Finalmente una vez se hace en el acomplamiento de buffers se halla secuenciado y capturado 
por parte del receptos los datos, se halla hecho el sumcheck ( que es una suma para contar
los datos de envios con los datos recividos y si coinciden es porque todo saliio bien) la trasnmision se simplifica se une y el receptor ve el mensaje: 

Cliente (192.168.1.20:49152) -----------------------> Servidor (104.21.2.33:80)
   "la rata az"   Seq=0
   "ul se ava "   Seq=10
   "a culiar "    Seq=20







